サーバ機器--CPU
		|-メモリ
		|-ストレージ
		|-UPS(無停電電源装置)
		|-KVMスイッチ（複数のサーバを制御するスイッチ）

CPU：Center Processing Unit　演算処理を行う電子回路部品
	動作周波数が大きいほど演算能力が高くなり、温度上昇も激しくなる。

メモリ：CPUが直接アクセスできる主記憶装置。データ容量の大きい/データ転送速度の高速なほど高性能。

ストレージ：データベースに書きこまれたデータの永続データを保存するデバイス
		ストーレジの障害はデータ損失につながるため冗長化必須


dockerメモ：hello world 
docker container run ubuntu:latest /bin/echo 'hello'

git bash->gitのpathが通ってるのでそこにdockerで弄るexeファイルがないってエラー表示される->パス変換が必要
cmd->hello を帰ってくる

docker run "hello-world"：サンプルコンテナの軌道
git bash->普通に使える
cmd->使える

git bashを今後使うならばパス変換が必要かも　https://qiita.com/amanoese/items/8a19548d5e9dc2e22959



DockerImagesはコンテナのひな型

コマンド https://qiita.com/mmizum/items/bb4a745b8613136c7560
-docker containr run イメージ名 実行コマンド
ex)docker container run ubuntu:latest /bin/echo 'hello'

-docker version
バージョン確認

-docker system info
コンテナ数やストレージドライバの種類等を確認

-docker system df
dockerが使用しているディスク利用状況（imagesがいくつあるか、conainersがいくつあるか）等を確認

-docker rm コンテナID
docker system dfでコンテナの状況を確認、docker ps で現在使用中か確認,docker ps -aでコンテナIDを確認し削除する。

-docker login
docker hubの認証

https://blowup-bbs.com/docker-ubuntu-python-jupyter/

https://qiita.com/shngt/items/51102aeb81834d0d3d7a

ready
Dockerのtutorial
kaggle ieeeの解放をまとめる




Abeさん講義メモ
案件の話聞くのが好きだからslackで聞いてください

sparkMLの良いところ
->でかいデータのままモデル回せる

カテゴリnameについてはLabelBinalizerでスパースで返す
欠損は埋めてからtransform

実践での知見
->k8sで機械学習APIを走らせて管理する
->k8s上でapiを実行するような知見
->コンテナ2,3個分けて画面側、予測側とか
->MLエンジニア＝普通のエンジニアと対等に話せるか（できる＝基準）

コンペモチベ
->自分のできないことをやる
->稼働の5割
->終わったコンペのEDA写経するとかで練習
コンペ小技
->csv読み込んだ後全部pklに変換
->スクリプト化するルーティン


D2C　アベさんの肌間隔（個人主幹）
ozu,takahashi,takayasuは進捗が少なからず分かる。どこまで理解してそうか、してなさそうか、->質問をしてるから、質問はどこでつまっているか、どこで理解ができてないかの言語化だから
あと理論と実践を意識してるって処はあるらしい。理論ではよさそうだけど実際はどうなんですか？っていう質問がそう。

自炊の森
OpenCVとPythonによる機械学習プログラミング
前処理大全[データ分析のためのSQL/R/Python実践テクニック]
GCPの教科書
データ分析プロジェクトの手引: データの前処理から予測モデルの運用までを俯瞰する20章
深層学習による自然言語処理
データ分析基盤構築入門[Fluentd、Elasticsearch、Kibanaによるログ収集と可視化]
東京大学のデータサイエンティスト育成講座 ~Pythonで手を動かして学ぶデ―タ分析~